total_initial = sum(!is.na(Esc_perc_b0_initial)),
current_achieved = sum(Esc_perc_b0_current > 0.4, na.rm = T),
initial_achieved = sum(Esc_perc_b0_initial > 0.4, na.rm = T),
increase = sum(Delta_b0 > 0, na.rm = T),
decrease = sum(Delta_b0 < 0, na.rm = T),
nochange = sum(Delta_b0 == 0, na.rm = T),
b0_and_suma_current = sum(b0_and_suma_current_there == 1, na.rm = T),
b0_and_suma_initial = sum(b0_and_suma_current_there == 1, na.rm = T),
b0_suma_ok_current = sum(b0_and_sumA_current == 1, na.rm = T),
b0_suma_ok_initial = sum(b0_and_sumA_initial == 1, na.rm = T),
suma_ok_b0_not_current = sum(suma_ok_b0_not_current == 1, na.rm = T),
suma_not_b0_not_current = sum(suma_not_b0_not_current == 1, na.rm = T),
suma_ok_b0_not_initial = sum(suma_ok_b0_not_initial == 1, na.rm = T),
suma_not_b0_not_initial = sum(suma_not_b0_not_initial == 1, na.rm = T),
trend_increase = sum(b0_trend == 1, na.rm = T),
trend_decrease = sum(b0_trend == -1, na.rm = T),
trend_nochange = sum(b0_trend == 0, na.rm = T)) %>%
mutate(total_no = length(unique(ADG_non_EU$emu)),
indicator = "Esc_perc_incl_non_EU"),
ADG_EU %>%
summarize(total_current = sum(!is.na(suma_current)),
total_initial = sum(!is.na(suma_initial)),
current_achieved = sum(suma_current < 0.92, na.rm = T),
initial_achieved = sum(suma_initial < 0.92, na.rm = T),
increase = sum(Delta_suma > 0, na.rm = T),
decrease = sum(Delta_suma < 0, na.rm = T),
nochange = sum(Delta_suma == 0, na.rm = T),
b0_and_suma_current = sum(b0_and_suma_current_there == 1, na.rm = T),
b0_and_suma_initial = sum(b0_and_suma_current_there == 1, na.rm = T),
b0_suma_ok_current = sum(b0_and_sumA_current == 1, na.rm = T),
b0_suma_ok_initial = sum(b0_and_sumA_initial == 1, na.rm = T),
suma_ok_b0_not_current = sum(suma_ok_b0_not_current == 1, na.rm = T),
suma_not_b0_not_current = sum(suma_not_b0_not_current == 1, na.rm = T),
suma_ok_b0_not_initial = sum(suma_ok_b0_not_initial == 1, na.rm = T),
suma_not_b0_not_initial = sum(suma_not_b0_not_initial == 1, na.rm = T),
trend_increase = sum(suma_trend == 1, na.rm = T),
trend_decrease = sum(suma_trend == -1, na.rm = T),
trend_nochange = sum(suma_trend == 0, na.rm = T)) %>%
mutate(total_no = length(unique(ADG_EU$emu)),
indicator = "suma_EU"),
ADG_EU %>%
summarize(total_current = sum(!is.na(Esc_perc_b0_current)),
total_initial = sum(!is.na(Esc_perc_b0_initial)),
current_achieved = sum(Esc_perc_b0_current > 0.4, na.rm = T),
initial_achieved = sum(Esc_perc_b0_initial > 0.4, na.rm = T),
increase = sum(Delta_b0 > 0, na.rm = T),
decrease = sum(Delta_b0 < 0, na.rm = T),
nochange = sum(Delta_b0 == 0, na.rm = T),
b0_and_suma_current = sum(b0_and_suma_current_there == 1, na.rm = T),
b0_and_suma_initial = sum(b0_and_suma_current_there == 1, na.rm = T),
b0_suma_ok_current = sum(b0_and_sumA_current == 1, na.rm = T),
b0_suma_ok_initial = sum(b0_and_sumA_initial == 1, na.rm = T),
suma_ok_b0_not_current = sum(suma_ok_b0_not_current == 1, na.rm = T),
suma_not_b0_not_current = sum(suma_not_b0_not_current == 1, na.rm = T),
suma_ok_b0_not_initial = sum(suma_ok_b0_not_initial == 1, na.rm = T),
suma_not_b0_not_initial = sum(suma_not_b0_not_initial == 1, na.rm = T),
trend_increase = sum(suma_trend == 1, na.rm = T),
trend_decrease = sum(b0_trend == -1, na.rm = T),
trend_nochange = sum(b0_trend == 0, na.rm = T)) %>%
mutate(total_no = length(unique(ADG_EU$emu)),
indicator = "Esc_perc_EU")) %>%
select(indicator, total_no, total_current, total_initial, current_achieved, initial_achieved, increase, decrease, nochange, trend_increase, trend_decrease, trend_nochange, b0_suma_ok_current, b0_suma_ok_initial, b0_and_suma_current, b0_and_suma_initial, suma_ok_b0_not_current, suma_not_b0_not_current, suma_ok_b0_not_initial, suma_not_b0_not_initial) %>%
column_to_rownames(var = "indicator")
ADG_summary <- as.data.frame(t(head(ADG_summary)))
#write.csv2(ADG_summary, file = "ADG_summary.csv", row.names = T, sep = ";")
flextable(ADG_summary %>% rownames_to_column("indicator")) %>% autofit()
flextable(Kendall_table %>%
mutate(Tau_suma = ifelse(p_suma <= 0.1,
ifelse(p_suma <= 0.05, paste(Tau_suma, "**"), paste(Tau_suma, "*")), as.character(Tau_suma)))  %>%
select(eel_emu_nameshort, Period_suma, suma_initial, suma_current, n_suma, Delta_suma, Tau_suma) %>%
mutate_all(~ifelse(is.nan(.), NA, .)) %>%
relocate(n_suma, .after = Period_suma) %>%
filter_at(vars(suma_initial, suma_current, n_suma, Delta_suma, Tau_suma), any_vars(!is.na(.)))) %>%
set_header_labels(eel_emu_nameshort = "EMU",
Period_suma = "Period",
suma_initial = "\u03A3A (initial)",
suma_current = "\u03A3A (current)",
n_suma = "n",
Delta_suma = "\u0394 \u03A3A",
Tau_suma = "\u03C4 \u03A3A") %>%
autofit()
flextable(Kendall_table %>%
mutate(Tau_sumf = ifelse(p_sumf <= 0.1,
ifelse(p_sumf <= 0.05, paste(Tau_sumf, "**"), paste(Tau_sumf, "*")), as.character(Tau_sumf)))  %>%
select(eel_emu_nameshort, Period_sumf, sumf_initial, sumf_current, n_sumf, Delta_sumf, Tau_sumf) %>%
mutate_all(~ifelse(is.nan(.), NA, .)) %>%
relocate(n_sumf, .after = Period_sumf) %>%
filter_at(vars(sumf_initial, sumf_current, n_sumf, Delta_sumf, Tau_sumf), any_vars(!is.na(.)))) %>%
set_header_labels(eel_emu_nameshort = "EMU",
Period_sumf = "Period",
sumf_initial = "\u03A3F (initial)",
sumf_current = "\u03A3F (current)",
n_sumf = "n",
Delta_sumf = "\u0394 \u03A3F",
Tau_sumf = "\u03C4 \u03A3F") %>%
autofit()
flextable(Kendall_table %>%
mutate(Tau_sumh = ifelse(p_sumh <= 0.1,
ifelse(p_sumh <= 0.05, paste(Tau_sumh, "**"), paste(Tau_sumh, "*")), as.character(Tau_sumh)))  %>%
select(eel_emu_nameshort, Period_sumh, sumh_initial, sumh_current, n_sumh, Delta_sumh, Tau_sumh) %>%
relocate(n_sumh, .after = Period_sumh) %>%
mutate_all(~ifelse(is.nan(.), NA, .)) %>%
filter_at(vars(sumh_initial, sumh_current, n_sumh, Delta_sumh, Tau_sumh), any_vars(!is.na(.)))) %>%
set_header_labels(eel_emu_nameshort = "EMU",
Period_sumh = "Period",
sumh_initial = "\u03A3H (initial)",
sumh_current = "\u03A3H (current)",
n_sumh = "n",
Delta_sumh = "\u0394 \u03A3H",
Tau_sumh = "\u03C4 \u03A3H") %>%
autofit()
#### CAREFUL, THIS SECTION MIGHT NEED REVISION SINCE POSSIBLY NAs ARE DROPPED THAT SHOULD BE INCLUDED AS ZEROES####
load("./data_dependencies/Annex15.Rdata")
counts <- res %>%
mutate(emu_name_short = str_replace(emu_name_short, "NL_Neth", "NL_total")) %>%
group_by(emu_name_short) %>%
count(measure_type)
measures <- expand.grid(EMU = unique(res$emu_name_short),
measure_type = unique(res$measure_type)) %>%
mutate(EMU = str_replace(EMU, "NL_Neth", "NL_total")) %>%
left_join(counts, by=c("EMU" = "emu_name_short", "measure_type" = "measure_type")) %>%
replace(is.na(.), 0) %>%
mutate(binary_measure = ifelse(n == 0 , 0 , 1),
n = NULL) %>%
left_join(Kendall_table %>% select(eel_emu_nameshort, p_suma, p_sumf, p_sumh, Tau_suma, Tau_sumf, Tau_sumh), by = c("EMU" = "eel_emu_nameshort")) %>%
left_join(Kendall_table %>% select(eel_emu_nameshort, p_b0, p_b0_adj, Tau_b0, Tau_b0_adj), by = c("EMU" = "eel_emu_nameshort")) %>%
mutate(sumA = ifelse(p_suma < 0.1 & Tau_suma < 0, 1, 0),
sumF = ifelse(p_sumf < 0.1 & Tau_sumf < 0, 1, 0),
sumH = ifelse(p_sumh < 0.1 & Tau_sumh < 0, 1, 0),
b0 = ifelse(p_b0 < 0.1 & Tau_b0 > 0, 1, 0),
b0_adj = ifelse(p_b0_adj < 0.1 & Tau_b0_adj > 0, 1, 0))
Fisher_sumA <- measures %>%
mutate(measure_type = str_replace(measure_type, "Recreational fishery", "Recreational_fishery")) %>%
filter(binary_measure == 1) %>%
group_by(measure_type, sumA) %>%
summarise(effect = n(), .groups = "keep") %>%
spread(sumA, effect) %>%
rename(effect = "1",
no_effect = "0") %>%
mutate("<NA>" = NULL) %>%
drop_na() %>%
mutate(total = sum(effect, no_effect),
percentage = effect/total*100) %>%
relocate(effect, .after = measure_type)
Fisher_sumF <- measures %>%
mutate(measure_type = str_replace(measure_type, "Recreational fishery", "Recreational_fishery")) %>%
filter(binary_measure == 1) %>%
group_by(measure_type, sumF) %>%
summarise(effect = n(), .groups = "keep") %>%
spread(sumF, effect) %>%
rename(effect = "1",
no_effect = "0") %>%
mutate("<NA>" = NULL) %>%
drop_na() %>%
mutate(total = sum(effect, no_effect),
percentage = effect/total*100) %>%
relocate(effect, .after = measure_type)
Fisher_sumH <- measures %>%
mutate(measure_type = str_replace(measure_type, "Recreational fishery", "Recreational_fishery")) %>%
filter(binary_measure == 1) %>%
group_by(measure_type, sumH) %>%
summarise(effect = n(), .groups = "keep") %>%
spread(sumH, effect) %>%
rename(effect = "1",
no_effect = "0") %>%
mutate("<NA>" = NULL) %>%
drop_na() %>%
mutate(total = sum(effect, no_effect),
percentage = effect/total*100) %>%
relocate(effect, .after = measure_type)
Fisher_b0_adj <- measures %>%
mutate(measure_type = str_replace(measure_type, "Recreational fishery", "Recreational_fishery")) %>%
filter(binary_measure == 1) %>%
group_by(measure_type, b0_adj) %>%
summarise(effect = n(), .groups = "keep") %>%
spread(b0_adj, effect) %>%
rename(effect = "1",
no_effect = "0") %>%
mutate("<NA>" = NULL) %>%
drop_na() %>%
mutate(total = sum(effect, no_effect),
percentage = effect/total*100) %>%
relocate(effect, .after = measure_type)
flextable(Fisher_sumA) %>% autofit() %>% set_caption(caption = paste("sumA, p =", round((fisher.test(Fisher_sumA[,c(2,3)])$p.value), 3)))
flextable(Fisher_sumF) %>% autofit() %>% set_caption(caption = paste("sumF, p =", round((fisher.test(Fisher_sumF[,c(2,3)])$p.value), 3)))
flextable(Fisher_sumH) %>% autofit() %>% set_caption(caption = paste("sumH, p =", round((fisher.test(Fisher_sumH[,c(2,3)])$p.value), 3)))
flextable(Fisher_b0_adj) %>% autofit() %>% set_caption(caption = paste("b0 adjusted, p =", round((fisher.test(Fisher_b0_adj[,c(2,3)])$p.value), 3)))
fisher_sumA <- measures %>%
group_by(measure_type, binary_measure, sumA) %>%
summarise(value = n()) %>%
mutate(binary_measure = str_replace(binary_measure, "0", "not_implemented"),
binary_measure = str_replace(binary_measure, "1", "implemented")) %>%
mutate(indicator = paste(binary_measure, sumA, sep = "_")) %>%
ungroup() %>%
select(-binary_measure, - sumA) %>%
spread(indicator, value) %>%
replace(is.na(.), 0) %>%
mutate(NAs = paste(implemented_NA, not_implemented_NA, sep ="/")) %>%
select(-implemented_NA, not_implemented_NA)
fisher_sumA$p <- apply(fisher_sumA %>% select(-NAs), 1 ,function(x) {
tbl <- matrix(as.numeric(x[2:5]), ncol=2, byrow=T)
fisher.test(tbl)$p.value
})
fisher_sumA <- fisher_sumA %>%
select(measure_type, implemented_0, implemented_1, not_implemented_0, not_implemented_1, p, NAs) %>%
mutate(p = round(p, 3))
######################################
fisher_sumF <- measures %>%
group_by(measure_type, binary_measure, sumF) %>%
summarise(value = n()) %>%
mutate(binary_measure = str_replace(binary_measure, "0", "not_implemented"),
binary_measure = str_replace(binary_measure, "1", "implemented")) %>%
mutate(indicator = paste(binary_measure, sumF, sep = "_")) %>%
ungroup() %>%
select(-binary_measure, - sumF) %>%
spread(indicator, value) %>%
replace(is.na(.), 0) %>%
mutate(NAs = paste(implemented_NA, not_implemented_NA, sep ="/")) %>%
select(-implemented_NA, not_implemented_NA)
fisher_sumF$p <- apply(fisher_sumF %>% select(-NAs), 1 ,function(x) {
tbl <- matrix(as.numeric(x[2:5]), ncol=2, byrow=T)
fisher.test(tbl)$p.value
})
fisher_sumF <- fisher_sumF %>%
select(measure_type, implemented_0, implemented_1, not_implemented_0, not_implemented_1, p, NAs) %>%
mutate(p = round(p, 3))
######################################
fisher_sumH <- measures %>%
group_by(measure_type, binary_measure, sumH) %>%
summarise(value = n()) %>%
mutate(binary_measure = str_replace(binary_measure, "0", "not_implemented"),
binary_measure = str_replace(binary_measure, "1", "implemented")) %>%
mutate(indicator = paste(binary_measure, sumH, sep = "_")) %>%
ungroup() %>%
select(-binary_measure, - sumH) %>%
spread(indicator, value) %>%
replace(is.na(.), 0) %>%
mutate(NAs = paste(implemented_NA, not_implemented_NA, sep ="/")) %>%
select(-implemented_NA, not_implemented_NA)
fisher_sumH$p <- apply(fisher_sumH %>% select(-NAs), 1 ,function(x) {
tbl <- matrix(as.numeric(x[2:5]), ncol=2, byrow=T)
fisher.test(tbl)$p.value
})
fisher_sumH <- fisher_sumH %>%
select(measure_type, implemented_0, implemented_1, not_implemented_0, not_implemented_1, p, NAs) %>%
mutate(p = round(p, 3))
######################################
fisher_b0 <- measures %>%
group_by(measure_type, binary_measure, b0) %>%
summarise(value = n()) %>%
mutate(binary_measure = str_replace(binary_measure, "0", "not_implemented"),
binary_measure = str_replace(binary_measure, "1", "implemented")) %>%
mutate(indicator = paste(binary_measure, b0, sep = "_")) %>%
ungroup() %>%
select(-binary_measure, -b0) %>%
spread(indicator, value) %>%
replace(is.na(.), 0) %>%
mutate(NAs = paste(implemented_NA, not_implemented_NA, sep ="/")) %>%
select(-implemented_NA, not_implemented_NA)
fisher_b0$p <- apply(fisher_b0 %>% select(-NAs), 1 ,function(x) {
tbl <- matrix(as.numeric(x[2:5]), ncol=2, byrow=T)
fisher.test(tbl)$p.value
})
fisher_b0 <- fisher_b0 %>%
select(measure_type, implemented_0, implemented_1, not_implemented_0, not_implemented_1, p, NAs) %>%
mutate(p = round(p, 3))
############## OUTPUT TABLES###################
library(officer)
thick <- officer::fp_border(color="black", width = 2.5)
thin <- officer::fp_border(color="black", width = 1)
flextable(fisher_sumA) %>% set_caption(caption = "\u03A3A") %>%
set_header_labels(implemented_0 = "implemented/no effect",
implemented_1 = "implemented/effect",
not_implemented_0 = "not implemented/no effect",
not_implemented_1 = "not implemented/effect",
NAs = "Not tested (implemented/not implemented)",
measure_type = "Measure type") %>%
vline(j = 5, border = thin) %>%
vline(j = 6, border = thick) %>%
autofit()
flextable(fisher_sumF) %>% set_caption(caption = "\u03A3F") %>%
set_header_labels(implemented_0 = "implemented/no effect",
implemented_1 = "implemented/effect",
not_implemented_0 = "not implemented/no effect",
not_implemented_1 = "not implemented/effect",
NAs = "Not tested (implemented/not implemented)",
measure_type = "Measure type") %>%
vline(j = 5, border = thin) %>%
vline(j = 6, border = thick) %>%
autofit()
flextable(fisher_sumH) %>% set_caption(caption = "\u03A3H") %>%
set_header_labels(implemented_0 = "implemented/no effect",
implemented_1 = "implemented/effect",
not_implemented_0 = "not implemented/no effect",
not_implemented_1 = "not implemented/effect",
NAs = "Not tested (implemented/not implemented)",
measure_type = "Measure type") %>%
vline(j = 5, border = thin) %>%
vline(j = 6, border = thick) %>%
autofit()
flextable(fisher_b0) %>% set_caption(caption = "b0") %>%
set_header_labels(implemented_0 = "implemented/no effect",
implemented_1 = "implemented/effect",
not_implemented_0 = "not implemented/no effect",
not_implemented_1 = "not implemented/effect",
NAs = "Not tested (implemented/not implemented)",
measure_type = "Measure type") %>%
vline(j = 5, border = thin) %>%
vline(j = 6, border = thick) %>%
autofit()
detach("package:officer", unload=TRUE)
require(lme4)
delta <- Kendall_table %>%
select(eel_emu_nameshort, Period_suma, suma_initial, suma_current, Delta_suma, Tau_b0_adj, p_b0_adj, Period_b0, Period_b0_adj, Tau_b0, p_b0) %>%
mutate(binary_b0_adj = ifelse(Tau_b0_adj > 0 & p_b0_adj < 0.1, 1, 0),
binary_b0 = ifelse(Tau_b0 > 0 & p_b0 < 0.1, 1, 0),
test_period_b0 = ifelse(Period_suma != Period_b0, "Period_b0_diff", "OK"),
test_period_b0_adj = ifelse(Period_suma != Period_b0_adj, "Period_b0_adj_diff", "OK"),
Tau_b0_adj = NULL,
p_b0_adj = NULL,
Tau_b0 = NULL,
p_b0 = NULL)
#MAYBE ADD WARNING HERE THAT IS DISPLAYD IN THE PRODUCED TABLE/GRAPH IF TIME PERIODS DO NOT MATCH (FOR NON-NA CASES) - IT IS FINE THOUGH FOR THIS ANALYSIS
logit_delta_b0 <- glm(binary_b0 ~ Delta_suma, family=binomial(link="logit"), data = delta)
logit_delta_b0_adj <- glm(binary_b0_adj ~ Delta_suma, family=binomial(link="logit"), data = delta)
logit_delta_b0_adj_1 <- glm(binary_b0_adj ~ Delta_suma, family=binomial(link="logit"), data = delta %>% filter(Delta_suma < 1 & Delta_suma > -1))
new_delta <- expand.grid(Delta_suma = seq(min(delta$Delta_suma[!is.na(delta$Delta_suma)]), max(delta$Delta_suma[!is.na(delta$Delta_suma)]), by =0.1))
ggplot(delta, aes(x=Delta_suma, y=binary_b0_adj)) +
geom_point(size=0.9)+
theme_bw()+
geom_line(data= new_delta, aes(x=Delta_suma, y=predict(logit_delta_b0_adj, type = "response", newdata = new_delta)), size = 0.3)+
labs(x = "\u0394 \u03A3A", y = expression("Change in B"["current"]*"/"*"B"["0_adj"]~"(0=no increase, 1=increase)"))
ggplot(delta, aes(x=Delta_suma, y=binary_b0)) +
geom_point(size=0.9)+
theme_bw()+
geom_line(data= new_delta, aes(x=Delta_suma, y=predict(logit_delta_b0, type = "response", newdata = new_delta)), size = 0.3)+
labs(x = "\u0394 \u03A3A", y = expression("Change in B"["current"]*"/"*"B"["0"]~"(0=no increase, 1=increase)"))
logit_delta_table <- as.data.frame(summary(logit_delta_b0_adj)$coefficients) %>%
mutate(Coefficient = ifelse(row_number() == 1, "Intercept", "\u0394 \u03A3A")) %>%
relocate(Coefficient, .before = Estimate) %>%
rename_with(.col = 5, ~ "p-value (all)") %>%
left_join(as.data.frame(summary(logit_delta_b0_adj_1)$coefficients) %>%
mutate(Coefficient = ifelse(row_number() == 1, "Intercept", "\u0394 \u03A3A")) %>%
relocate(Coefficient, .before = Estimate) %>%
rename_with(.col = 5, ~ "p-value (truncated)"), by = "Coefficient") %>%
rename("Estimate (all)" = "Estimate.x",
"SE (all)" = "Std. Error.x",
"z (all)" = "z value.x",
"Estimate (truncated)" = "Estimate.y",
"SE (truncated)" = "Std. Error.y",
"z (truncated)" = "z value.y",)
flextable(logit_delta_table) %>% autofit()
measures_n <- expand.grid(EMU = unique(res$emu_name_short),
measure_type = unique(res$measure_type)) %>%
left_join(counts, by=c("EMU" = "emu_name_short", "measure_type" = "measure_type")) %>%
replace(is.na(.), 0) %>%
left_join(Kendall_table %>% select(eel_emu_nameshort, p_suma, p_sumf, p_sumh, Tau_suma, Tau_sumf, Tau_sumh, p_b0, p_b0_adj, Tau_b0, Tau_b0_adj), by = c("EMU" = "eel_emu_nameshort")) %>%
mutate(sumA = ifelse(p_suma < 0.1 & Tau_suma < 0, 1, 0),
sumF = ifelse(p_sumf < 0.1 & Tau_sumf < 0, 1, 0),
sumH = ifelse(p_sumh < 0.1 & Tau_sumh < 0, 1, 0),
b0 = ifelse(p_b0 < 0.1 & Tau_b0 > 0, 1, 0),
b0_adj = ifelse(p_b0_adj < 0.1 & Tau_b0_adj > 0, 1, 0)) %>%
select(EMU, measure_type, n, sumA, sumF, sumH, b0_adj)
logit_measures_n_sumA <- glm(sumA ~ n + measure_type + n:measure_type-1, family=binomial(link="logit"), data = measures_n)
logit_measures_n_sumF <- glm(sumF ~ n + measure_type + n:measure_type-1, family=binomial(link="logit"), data = measures_n)
logit_measures_n_sumH <- glm(sumH ~ n + measure_type + n:measure_type-1, family=binomial(link="logit"), data = measures_n)
logit_measures_n_b0_adj <- glm(b0_adj ~ n + measure_type + n:measure_type-1, family=binomial(link="logit"), data = measures_n)
new_measures_n <- expand.grid(n = seq(0, max(measures_n$n), by =0.5),
measure_type = unique(measures_n$measure_type))
ggplot(measures_n, aes(x=n, y=sumA)) +
geom_point(aes(col=measure_type), size=0.9)+
theme_bw()+
geom_line(data = new_measures_n, aes(x=n, y=predict(logit_measures_n_sumA, type = "response", newdata = new_measures_n), col = measure_type), size = 0.3)+
labs(x = "number of measures", y = "Effect on SumA (1 = present, 0 = absent)")+
theme(legend.position = "none")+
facet_wrap(~measure_type)
summary_n_sumA <- as.data.frame(summary(logit_measures_n_sumA)$coefficients)
summary_n_sumA$coefficients <- rownames(summary_n_sumA)
flextable(summary_n_sumA %>% relocate(coefficients, .before = Estimate)) %>% autofit()
ggplot(measures_n, aes(x=n, y=sumF)) +
geom_point(aes(col=measure_type), size=0.9)+
theme_bw()+
geom_line(data = new_measures_n, aes(x=n, y=predict(logit_measures_n_sumF, type = "response", newdata = new_measures_n), col = measure_type), size = 0.3)+
labs(x = "number of measures", y = "Effect on SumF (1 = present, 0 = absent)")+
theme(legend.position = "none")+
facet_wrap(~measure_type)
summary_n_sumF <- as.data.frame(summary(logit_measures_n_sumF)$coefficients)
summary_n_sumF$coefficients <- rownames(summary_n_sumF)
flextable(summary_n_sumF %>% relocate(coefficients, .before = Estimate)) %>% autofit()
ggplot(measures_n, aes(x=n, y=sumH)) +
geom_point(aes(col=measure_type), size=0.9)+
theme_bw()+
geom_line(data = new_measures_n, aes(x=n, y=predict(logit_measures_n_sumH, type = "response", newdata = new_measures_n), col = measure_type), size = 0.3)+
labs(x = "number of measures", y = "Effect on SumH (1 = present, 0 = absent)")+
theme(legend.position = "none")+
facet_wrap(~measure_type)
summary_n_sumH <- as.data.frame(summary(logit_measures_n_sumH)$coefficients)
summary_n_sumH$coefficients <- rownames(summary_n_sumH)
flextable(summary_n_sumH %>% relocate(coefficients, .before = Estimate)) %>% autofit()
ggplot(measures_n, aes(x=n, y=b0_adj)) +
geom_point(aes(col=measure_type), size=0.9)+
theme_bw()+
geom_line(data = new_measures_n, aes(x=n, y=predict(logit_measures_n_b0_adj, type = "response", newdata = new_measures_n), col = measure_type), size = 0.3)+
labs(x = "number of measures", y = "Effect on Bcurr (1 = present, 0 = absent)")+
theme(legend.position = "none")+
facet_wrap(~measure_type)
summary_n_b0_adj <- as.data.frame(summary(logit_measures_n_b0_adj)$coefficients)
summary_n_b0_adj$coefficients <- rownames(summary_n_b0_adj)
flextable(summary_n_b0_adj %>% relocate(coefficients, .before = Estimate)) %>% autofit()
scores <- res %>%
mutate(impact = ifelse(impact == "High", 3,
ifelse(impact == "Intermediate", 2,
ifelse(impact == "Low", 1, NA)))) %>%
group_by(emu_name_short, measure_type) %>%
summarise(score = sum(impact)) %>%
drop_na()
measures_scores <- expand.grid(EMU = unique(res$emu_name_short),
measure_type = unique(res$measure_type)) %>%
left_join(scores, by=c("EMU" = "emu_name_short", "measure_type" = "measure_type")) %>%
drop_na() %>%
left_join(Kendall_table %>% select(eel_emu_nameshort, p_suma, p_sumf, p_sumh, Tau_suma, Tau_sumf, Tau_sumh, eel_emu_nameshort, p_b0, p_b0_adj, Tau_b0, Tau_b0_adj), by = c("EMU" = "eel_emu_nameshort")) %>%
mutate(sumA = ifelse(p_suma < 0.1 & Tau_suma < 0, 1, 0),
sumF = ifelse(p_sumf < 0.1 & Tau_sumf < 0, 1, 0),
sumH = ifelse(p_sumh < 0.1 & Tau_sumh < 0, 1, 0),
b0 = ifelse(p_b0 < 0.1 & Tau_b0 > 0, 1, 0),
b0_adj = ifelse(p_b0_adj < 0.1 & Tau_b0_adj > 0, 1, 0)) %>%
select(EMU, measure_type, score, sumA, sumF, sumH, b0_adj)
measures_scores <- measures_scores[!with(measures_scores, is.na(sumA) & is.na (sumF) & is.na(sumA) & is.na(b0_adj)),]
logit_measures_scores_sumA <- glm(sumA ~ score + measure_type + score:measure_type-1, family=binomial(link="logit"), data = measures_scores)
logit_measures_scores_sumF <- glm(sumF ~ score + measure_type + score:measure_type-1, family=binomial(link="logit"), data = measures_scores)
logit_measures_scores_sumH <- glm(sumH ~ score + measure_type + score:measure_type-1, family=binomial(link="logit"), data = measures_scores)
logit_measures_scores_b0_adj <- glm(b0_adj ~ score + measure_type + score:measure_type-1, family=binomial(link="logit"), data = measures_scores)
new_measures_scores <- expand.grid(score = seq(0, max(measures_scores$score), by =0.5),
measure_type = unique(measures_scores$measure_type))
ggplot(measures_scores, aes(x=score, y=sumA)) +
geom_point(aes(col=measure_type), size=0.9)+
theme_bw()+
geom_line(data = new_measures_scores, aes(x=score, y=predict(logit_measures_scores_sumA, type = "response", newdata = new_measures_scores), col = measure_type), size = 0.3)+
labs(x = "number of measures", y = "Effect on SumA (1 = present, 0 = absent)")+
theme(legend.position = "none")+
facet_wrap(~measure_type)
summary_scores_sumA <- as.data.frame(summary(logit_measures_scores_sumA)$coefficients)
summary_scores_sumA$coefficients <- rownames(summary_scores_sumA)
flextable(summary_scores_sumA %>% relocate(coefficients, .before = Estimate)) %>% autofit()
ggplot(measures_scores, aes(x=score, y=sumF)) +
geom_point(aes(col=measure_type), size=0.9)+
theme_bw()+
geom_line(data = new_measures_scores, aes(x=score, y=predict(logit_measures_scores_sumF, type = "response", newdata = new_measures_scores), col = measure_type), size = 0.3)+
labs(x = "number of measures", y = "Effect on SumF (1 = present, 0 = absent)")+
theme(legend.position = "none")+
facet_wrap(~measure_type)
summary_scores_sumF <- as.data.frame(summary(logit_measures_scores_sumF)$coefficients)
summary_scores_sumF$coefficients <- rownames(summary_scores_sumF)
flextable(summary_scores_sumF %>% relocate(coefficients, .before = Estimate)) %>% autofit()
ggplot(measures_scores, aes(x=score, y=sumH)) +
geom_point(aes(col=measure_type), size=0.9)+
theme_bw()+
geom_line(data = new_measures_scores, aes(x=score, y=predict(logit_measures_scores_sumH, type = "response", newdata = new_measures_scores), col = measure_type), size = 0.3)+
labs(x = "number of measures", y = "Effect on SumH (1 = present, 0 = absent)")+
theme(legend.position = "none")+
facet_wrap(~measure_type)
summary_scores_sumH <- as.data.frame(summary(logit_measures_scores_sumH)$coefficients)
summary_scores_sumH$coefficients <- rownames(summary_scores_sumH)
flextable(summary_scores_sumH %>% relocate(coefficients, .before = Estimate)) %>% autofit()
test <- measures_scores %>% filter(measure_type != "Eel_governance")
ggplot(measures_scores %>% filter(measure_type != "Eel_governance"), aes(x=score, y=b0_adj)) +
geom_point(aes(col=measure_type), size=0.9)+
theme_bw()+
geom_line(data = new_measures_scores %>% filter(measure_type != "Eel_governance"), aes(x=score, y=predict(logit_measures_scores_b0_adj, type = "response", newdata = new_measures_scores %>% filter(measure_type != "Eel_governance")), col = measure_type), size = 0.3)+
labs(x = "number of measures", y = "Effect on Bcurr (1 = present, 0 = absent)")+
theme(legend.position = "none")+
facet_wrap(~measure_type)
summary_scores_b0_adj <- as.data.frame(summary(logit_measures_scores_b0_adj)$coefficients)
summary_scores_b0_adj$coefficients <- rownames(summary_scores_sumH)
flextable(summary_scores_b0_adj %>% relocate(coefficients, .before = Estimate)) %>% autofit()
meas_mort <- indicator %>% filter(eel_year >= 2007) %>%
group_by(eel_emu_nameshort) %>%
filter(eel_year == min(eel_year) | eel_year == max(eel_year)) %>%
mutate(start_year = min(eel_year),
eel_year = ifelse(eel_year == start_year, "initial", "final"),
start_year = start_year) %>%
ungroup() %>%
filter(start_year <= 2011) %>%
select(start_year, eel_year, suma, sumf, sumh, eel_emu_nameshort, eel_cou_code) %>%
gather(key = "mortality_indicator", value = "value", c(suma, sumh, sumf)) %>%
mutate(mortality_indicator = paste(mortality_indicator, eel_year, sep = "_"),
eel_year = NULL,
start_year = as.factor(start_year)) %>%
spread(mortality_indicator, value) %>%
mutate(delta_sumf = sumf_final - sumf_initial,
delta_sumh = sumh_final - sumh_initial,
delta_suma = suma_final - suma_initial)
require(ggrepel)
ggplot(meas_mort, aes(x=suma_initial, y=delta_suma)) +
geom_point(size = 1) +
geom_text_repel(aes(label = eel_emu_nameshort, col = start_year), size = 3.2, max.overlaps = 50)+
theme_bw()+
geom_hline(yintercept = 0, col = "black", size = 0.5)+
geom_vline(xintercept = 0.92, col = "red", linetype = "dashed", size = 0.5)+
labs(x = "Initial \u03A3A", y = "\u0394 \u03A3A")
ggplot(meas_mort, aes(x=sumf_initial, y=delta_sumf)) +
geom_point(size = 1.5) +
geom_text_repel(aes(label = eel_emu_nameshort, col = start_year), size = 3.2, max.overlaps = 50)+
geom_hline(yintercept = 0, col = "black", size = 0.5)+
theme_bw()+
labs(x = "Initial \u03A3F", y = "\u0394 \u03A3F")
ggplot(meas_mort, aes(x=sumh_initial, y=delta_sumh)) +
geom_point(size = 1) +
geom_text_repel(aes(label = eel_emu_nameshort, col = start_year), size = 3.2, max.overlaps = 50)+
geom_hline(yintercept = 0, col = "black", size = 0.5)+
theme_bw()+
labs(x = "Initial \u03A3H", y = "\u0394 \u03A3H")
